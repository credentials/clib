/**
 * Test vectors
 *
 * @author Pim Vullers (pim@cs.ru.nl)
 */

#ifndef TEST_VECTORS_H
#define TEST_VECTORS_H

#include "credential_crypto_types.h"

#define TEST_COUNT 6
Number TEST_P = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x42, 0x45, 0x8F, 0x98, 0xBD, 0x17, 0xEA, 0x93, 0x80, 0x14, 0x8F, 0x88, 0xB0, 0x62, 0x90, 0xED, 0xCA, 0x29, 0xEE, 0x5C, 0x2E, 0xA5, 0x70, 0xA7, 0xEA, 0x36, 0x09, 0x1A, 0xCF, 0x2D, 0x06, 0xCA, 0x02, 0x57, 0x0F, 0xDD, 0x2B, 0x8D, 0x73, 0xB5, 0xDD, 0x5E, 0x78, 0xEE, 0xD2, 0xAD, 0xA4, 0xF0, 0xB0, 0x1A, 0x4C, 0xF2, 0x00, 0xE2, 0xA5, 0x07, 0xA6, 0x4B, 0xB3, 0x98, 0xF3, 0x1B, 0x77 };
Number TEST_Q = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAF, 0xC0, 0xF2, 0x47, 0xDD, 0x7B, 0xFA, 0x36, 0x23, 0x8A, 0xB5, 0x11, 0x9D, 0x6E, 0x0E, 0xF1, 0x9F, 0x46, 0xFD, 0x13, 0xD7, 0x74, 0x10, 0x31, 0x37, 0xD4, 0x71, 0x29, 0x98, 0xF4, 0x61, 0xFA, 0x8A, 0x75, 0x3C, 0x0D, 0x85, 0x0E, 0x17, 0x87, 0x31, 0xB1, 0xC2, 0x83, 0x9C, 0xF0, 0xD4, 0x5F, 0x43, 0xE6, 0xFF, 0xA1, 0x06, 0xA1, 0xAD, 0xCB, 0x2A, 0xB9, 0x8D, 0x31, 0x64, 0xD9, 0xA2, 0x3F };
Number TEST_N = { 0x88, 0xCC, 0x7B, 0xD5, 0xEA, 0xA3, 0x90, 0x06, 0xA6, 0x3D, 0x1D, 0xBA, 0x18, 0xBD, 0xAF, 0x00, 0x13, 0x07, 0x25, 0x59, 0x7A, 0x0A, 0x46, 0xF0, 0xBA, 0xCC, 0xEF, 0x16, 0x39, 0x52, 0x83, 0x3B, 0xCB, 0xDD, 0x40, 0x70, 0x28, 0x1C, 0xC0, 0x42, 0xB4, 0x25, 0x54, 0x88, 0xD0, 0xE2, 0x60, 0xB4, 0xD4, 0x8A, 0x31, 0xD9, 0x4B, 0xCA, 0x67, 0xC8, 0x54, 0x73, 0x7D, 0x37, 0x89, 0x0C, 0x7B, 0x21, 0x18, 0x4A, 0x05, 0x3C, 0xD5, 0x79, 0x17, 0x66, 0x81, 0x09, 0x3A, 0xB0, 0xEF, 0x0B, 0x8D, 0xB9, 0x4A, 0xFD, 0x18, 0x12, 0xA7, 0x8E, 0x1E, 0x62, 0xAE, 0x94, 0x26, 0x51, 0xBB, 0x90, 0x9E, 0x6F, 0x5E, 0x5A, 0x2C, 0xEF, 0x60, 0x04, 0x94, 0x6C, 0xCA, 0x3F, 0x66, 0xEC, 0x21, 0xCB, 0x9A, 0xC0, 0x1F, 0xF9, 0xD3, 0xE8, 0x8F, 0x19, 0xAC, 0x27, 0xFC, 0x77, 0xB1, 0x90, 0x3F, 0x14, 0x10, 0x49 };
Number TEST_S = { 0x61, 0x7D, 0xB2, 0x57, 0x40, 0x67, 0x32, 0x17, 0xDF, 0x74, 0xBD, 0xDC, 0x8D, 0x8A, 0xC1, 0x34, 0x5B, 0x54, 0xB9, 0xAE, 0xA9, 0x03, 0x45, 0x1E, 0xC2, 0xC6, 0xEF, 0xBE, 0x99, 0x43, 0x01, 0xF9, 0xCA, 0xBB, 0x25, 0x4D, 0x14, 0xE4, 0xA9, 0xFD, 0x2C, 0xD3, 0xFC, 0xC2, 0xC0, 0xEF, 0xC8, 0x78, 0x03, 0xF0, 0x95, 0x9C, 0x95, 0x50, 0xB2, 0xD2, 0xA2, 0xEE, 0x86, 0x9B, 0xCD, 0x6C, 0x5D, 0xF7, 0xB9, 0xE1, 0xE2, 0x4C, 0x18, 0xE0, 0xD2, 0x80, 0x98, 0x12, 0xB0, 0x56, 0xCE, 0x42, 0x0A, 0x75, 0x49, 0x4F, 0x9C, 0x09, 0xC3, 0x40, 0x5B, 0x45, 0x50, 0xFD, 0x97, 0xD5, 0x7B, 0x49, 0x30, 0xF7, 0x5C, 0xD9, 0xC9, 0xCE, 0x0A, 0x82, 0x07, 0x33, 0xCB, 0x7E, 0x6F, 0xC1, 0xEE, 0xAF, 0x29, 0x9C, 0x38, 0x44, 0xC1, 0xC9, 0x07, 0x7A, 0xC7, 0x05, 0xB7, 0x74, 0xD7, 0xA2, 0x0E, 0x77, 0xBA, 0x30 };
Number TEST_Z = { 0x3F, 0x7B, 0xAA, 0x7B, 0x26, 0xD1, 0x10, 0x05, 0x4A, 0x2F, 0x42, 0x79, 0x39, 0xE6, 0x1A, 0xC4, 0xE8, 0x44, 0x13, 0x9C, 0xEE, 0xBE, 0xA2, 0x4E, 0x5C, 0x6F, 0xB4, 0x17, 0xFF, 0xEB, 0x8F, 0x38, 0x27, 0x2F, 0xBF, 0xEE, 0xC2, 0x03, 0xDB, 0x43, 0xA2, 0xA4, 0x98, 0xC4, 0x9B, 0x77, 0x46, 0xB8, 0x09, 0x46, 0x1B, 0x3D, 0x1F, 0x51, 0x43, 0x08, 0xEE, 0xB3, 0x1F, 0x16, 0x3C, 0x5B, 0x6F, 0xD5, 0xE4, 0x1F, 0xFF, 0x1E, 0xB2, 0xC5, 0x98, 0x7A, 0x79, 0x49, 0x61, 0x61, 0xA5, 0x6E, 0x59, 0x5B, 0xC9, 0x27, 0x1A, 0xAA, 0x65, 0xD2, 0xF6, 0xB7, 0x2F, 0x56, 0x1A, 0x78, 0xDD, 0x61, 0x15, 0xF5, 0xB7, 0x06, 0xD9, 0x2D, 0x27, 0x6B, 0x95, 0xB1, 0xC9, 0x0C, 0x49, 0x98, 0x1F, 0xE7, 0x9C, 0x23, 0xA1, 0x9A, 0x21, 0x05, 0x03, 0x2F, 0x9F, 0x62, 0x18, 0x48, 0xBC, 0x57, 0x35, 0x2A, 0xB2, 0xAC };
Number TEST_R[] = {
  { 0x6B, 0x4D, 0x9D, 0x7D, 0x65, 0x4E, 0x4B, 0x12, 0x85, 0xD4, 0x68, 0x9E, 0x12, 0xD6, 0x35, 0xD4, 0xAF, 0x85, 0x16, 0x74, 0x60, 0xA3, 0xB4, 0x7D, 0xB9, 0xE7, 0xB8, 0x0A, 0x4D, 0x47, 0x6D, 0xBE, 0xEC, 0x0B, 0x89, 0x60, 0xA4, 0xAC, 0xAE, 0xCF, 0x25, 0xE1, 0x84, 0x77, 0xB9, 0x53, 0xF0, 0x28, 0xBD, 0x71, 0xC6, 0x62, 0x8D, 0xD2, 0xF0, 0x47, 0xD9, 0xC0, 0xA6, 0xEE, 0x8F, 0x2B, 0xC7, 0xA8, 0xB3, 0x48, 0x21, 0xC1, 0x4B, 0x26, 0x9D, 0xBD, 0x8A, 0x95, 0xDC, 0xCD, 0x56, 0x20, 0xB6, 0x0F, 0x64, 0xB1, 0x32, 0xE0, 0x96, 0x43, 0xCF, 0xCE, 0x90, 0x0A, 0x30, 0x45, 0x33, 0x12, 0x07, 0xF7, 0x94, 0xD4, 0xF7, 0xB4, 0xB0, 0x51, 0x34, 0x86, 0xCB, 0x04, 0xF7, 0x6D, 0x62, 0xD8, 0xB1, 0x4B, 0x5F, 0x03, 0x1A, 0x8A, 0xD9, 0xFF, 0xF3, 0xFA, 0xB8, 0xA6, 0x8E, 0x74, 0x59, 0x3C, 0x5D, 0x8B },
  { 0x17, 0x7C, 0xB9, 0x39, 0x35, 0xBB, 0x62, 0xC5, 0x25, 0x57, 0xA8, 0xDD, 0x43, 0x07, 0x5A, 0xA6, 0xDC, 0xDD, 0x02, 0xE2, 0xA0, 0x04, 0xC5, 0x6A, 0x81, 0x15, 0x35, 0x95, 0x84, 0x9A, 0x47, 0x6C, 0x51, 0x5A, 0x1F, 0xAE, 0x9E, 0x59, 0x6C, 0x22, 0xBE, 0x96, 0x0D, 0x3E, 0x96, 0x3E, 0xCF, 0xAC, 0x68, 0xF6, 0x38, 0xEB, 0xF8, 0x96, 0x42, 0x79, 0x8C, 0xCA, 0xE9, 0x46, 0xF2, 0xF1, 0x79, 0xD3, 0x0A, 0xBE, 0x0E, 0xDA, 0x9A, 0x44, 0xE1, 0x5E, 0x9C, 0xD2, 0x4B, 0x52, 0x2F, 0x61, 0x34, 0xB0, 0x6A, 0xC0, 0x9F, 0x72, 0xF0, 0x46, 0x14, 0xD4, 0x2F, 0xDB, 0xDB, 0x36, 0xB0, 0x9F, 0x60, 0xF7, 0xF8, 0xB1, 0xA5, 0x70, 0x78, 0x9D, 0x86, 0x1B, 0x7D, 0xBD, 0x40, 0x42, 0x72, 0x54, 0xF0, 0x33, 0x6D, 0x09, 0x23, 0xE1, 0x87, 0x65, 0x27, 0x52, 0x5A, 0x09, 0xCD, 0xAB, 0x26, 0x1E, 0xA7, 0xEE },
  { 0x12, 0xED, 0x9D, 0x5D, 0x9C, 0x99, 0x60, 0xBA, 0xCE, 0x45, 0xB7, 0x47, 0x1E, 0xD9, 0x35, 0x72, 0xEA, 0x0B, 0x82, 0xC6, 0x11, 0x12, 0x01, 0x27, 0x70, 0x1E, 0x4E, 0xF2, 0x2A, 0x59, 0x1C, 0xDC, 0x17, 0x31, 0x36, 0xA4, 0x68, 0x92, 0x61, 0x03, 0x73, 0x6A, 0x56, 0x71, 0x3F, 0xEF, 0x31, 0x11, 0xFD, 0xE1, 0x9E, 0x67, 0xCE, 0x63, 0x2A, 0xB1, 0x40, 0xA6, 0xFF, 0x6E, 0x09, 0x24, 0x5A, 0xC3, 0xD6, 0xE0, 0x22, 0xCD, 0x44, 0xA7, 0xCC, 0x36, 0xBC, 0xBE, 0x6B, 0x21, 0x89, 0x96, 0x0D, 0x3D, 0x47, 0x51, 0x3A, 0xB2, 0x61, 0x0F, 0x27, 0xD2, 0x72, 0x92, 0x4A, 0x84, 0x15, 0x46, 0x46, 0x02, 0x7B, 0x73, 0x89, 0x3D, 0x3E, 0xE8, 0x55, 0x47, 0x67, 0x31, 0x89, 0x42, 0xA8, 0x40, 0x3F, 0x0C, 0xD2, 0xA4, 0x12, 0x64, 0x81, 0x43, 0x88, 0xBE, 0x4D, 0xF3, 0x45, 0xE4, 0x79, 0xEF, 0x52, 0xA8 },
  { 0x7A, 0xF1, 0x08, 0x34, 0x37, 0xCD, 0xAC, 0x56, 0x8F, 0xF1, 0x72, 0x7D, 0x9C, 0x8A, 0xC4, 0x76, 0x8A, 0x15, 0x91, 0x2B, 0x03, 0xA8, 0x81, 0x48, 0x39, 0xCF, 0x05, 0x3C, 0x85, 0x69, 0x6D, 0xF3, 0xA5, 0x68, 0x15, 0x58, 0xF0, 0x6B, 0xAD, 0x59, 0x3F, 0x8A, 0x09, 0xC4, 0xB9, 0xC3, 0x80, 0x54, 0x64, 0x93, 0x5E, 0x03, 0x72, 0xCB, 0xD2, 0x35, 0xB1, 0x86, 0x86, 0xB5, 0x40, 0x96, 0x3E, 0xB9, 0x31, 0x0F, 0x99, 0x07, 0x07, 0x7E, 0x36, 0xEE, 0xD0, 0x25, 0x1D, 0x2C, 0xF1, 0xD2, 0xDD, 0xD6, 0x83, 0x6C, 0xF7, 0x93, 0xED, 0x23, 0xD2, 0x66, 0x08, 0x0B, 0xF4, 0x3C, 0x31, 0xCF, 0x3D, 0x30, 0x4E, 0x20, 0x55, 0xEF, 0x44, 0xD4, 0x54, 0xF4, 0x77, 0x35, 0x46, 0x64, 0xE1, 0x02, 0x5B, 0x3F, 0x13, 0x4A, 0xCE, 0x59, 0x27, 0x2F, 0x07, 0xD0, 0xFD, 0x49, 0x95, 0xBD, 0xAA, 0xCC, 0xDC, 0x0B },
  { 0x61, 0x4B, 0xF5, 0x24, 0x3C, 0x26, 0xD6, 0x2E, 0x8C, 0x7C, 0x9B, 0x0F, 0xAE, 0x9C, 0x57, 0xF4, 0x4B, 0x05, 0x71, 0x48, 0x94, 0xC3, 0xDC, 0xF5, 0x83, 0xD9, 0x79, 0x7C, 0x42, 0x3C, 0x16, 0x35, 0xF2, 0xE4, 0xF1, 0x69, 0x7E, 0x92, 0x77, 0x1E, 0xB9, 0x8C, 0xF3, 0x69, 0x99, 0x44, 0x8C, 0xEF, 0xC2, 0x0C, 0xB6, 0xE1, 0x09, 0x31, 0xDE, 0xD3, 0x92, 0x7D, 0xB0, 0xDF, 0xF5, 0x6E, 0x18, 0xBD, 0x3A, 0x60, 0x96, 0xF2, 0xFF, 0x1B, 0xFF, 0x1A, 0x70, 0x3F, 0x3C, 0xCE, 0x6F, 0x37, 0xD5, 0x89, 0xB5, 0x62, 0x63, 0x54, 0xDF, 0x0D, 0xB2, 0x77, 0xEF, 0x73, 0xDA, 0x8A, 0x2C, 0x73, 0x47, 0x68, 0x9B, 0x79, 0x13, 0x05, 0x59, 0xFB, 0x94, 0xB6, 0x26, 0x0C, 0x13, 0xD8, 0xDC, 0x7D, 0x26, 0x4B, 0xA2, 0x69, 0x53, 0xB9, 0x06, 0x48, 0x8B, 0x87, 0xCD, 0xC9, 0xDF, 0xD0, 0xBC, 0x69, 0xC5, 0x51 },
  { 0x5C, 0xAE, 0x46, 0xA4, 0x32, 0xBE, 0x9D, 0xB7, 0x2F, 0x3B, 0x10, 0x6E, 0x21, 0x04, 0xB6, 0x8F, 0x36, 0x1A, 0x9B, 0x3E, 0x7B, 0x06, 0xBB, 0xE3, 0xE5, 0x2E, 0x60, 0xE6, 0x98, 0x32, 0x61, 0x8B, 0x94, 0x1C, 0x95, 0x2A, 0xA2, 0xC6, 0xEE, 0xFF, 0xC2, 0x22, 0x31, 0x1E, 0xBB, 0xAB, 0x92, 0x2F, 0x70, 0x20, 0xD6, 0x09, 0xD1, 0x43, 0x5A, 0x8F, 0x3F, 0x94, 0x1F, 0x43, 0x73, 0xE4, 0x08, 0xBE, 0x5F, 0xEB, 0xAF, 0x47, 0x1D, 0x05, 0xC1, 0xB9, 0x10, 0x30, 0x78, 0x9F, 0x7F, 0xEA, 0x45, 0x0F, 0x61, 0xD6, 0xCB, 0x9A, 0x4D, 0xD8, 0x64, 0x22, 0x53, 0x32, 0x7E, 0x7E, 0xBF, 0x49, 0xC1, 0x60, 0x0C, 0x2A, 0x07, 0x5E, 0xC9, 0xB9, 0xDE, 0xC1, 0x96, 0xDD, 0xBD, 0xC3, 0x73, 0xC2, 0x9D, 0x1A, 0xF5, 0xCE, 0xAD, 0x34, 0xFA, 0x69, 0x93, 0xB8, 0xCD, 0xD7, 0x39, 0xD0, 0x4E, 0xA0, 0xD2, 0x53 }};
CLMessage TEST_A[] = {
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x7B },
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x65, 0x73 },
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x65, 0x74 },
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x65, 0x75 },
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x65, 0x76 }};
CLMessage TEST_SECRET = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x7B };

#endif // TEST_VECTORS_H
